// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package mlflowdb

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getMetrics = `-- name: GetMetrics :many
select key,
       value,
       step
from metrics
where run_uuid = $1
order by step, key
`

type GetMetricsRow struct {
	Key   string
	Value float64
	Step  int64
}

func (q *Queries) GetMetrics(ctx context.Context, runID pgtype.Text) ([]GetMetricsRow, error) {
	rows, err := q.db.Query(ctx, getMetrics, runID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetMetricsRow
	for rows.Next() {
		var i GetMetricsRow
		if err := rows.Scan(&i.Key, &i.Value, &i.Step); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
